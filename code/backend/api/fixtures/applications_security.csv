sep=;
Question;Option A;Option B;Option C;Option D;Correct Answer;Explanation;Difficulty;Domain 
After deploying a new feature, users report seeing someone else's profile data in their accounts. What might be the underlying issue?;Insecure direct object references;Input validation errors;Improper session handling;Cross-site scripting;A;The issue likely stems from improper access control where the system exposes sensitive data by allowing users to access objects they should not allowed to access, known as insecure direct object references.;Easy;Applications Security
Your mobile app stores sensitive data on-device. Which method should you use to enhance data protection?;Plain text storage;Symmetric encryption;Asymmetric encryption;No encryption;B;Symmetric encryption ensures that the data is encrypted and can only be decrypted with a specific key, providing a layer of security against unauthorized access.;Easy;Applications Security
Which of the following is the best option to protect against SQL injection attacks in a web application?;Parameterizing queries;Using simple string concatenation;Implementing client-side filters;Disabling database error messages;A;Parameterizing queries ensures that user inputs are treated as data, not executable code, preventing SQL injection.;Easy;Applications Security
During a security audit, you discover that user passwords in your mobile app are hashed using MD5. What should be your immediate action?;Switch to SHA-256 immediately;Convert passwords to plain text storage;Add salt and re-hash with MD5;Implement bcrypt or Argon2 for hashing;D;MD5 is considered insecure, and switching to a more secure hashing algorithm such as bcrypt or Argon2 adds substantial resistance against brute-force attacks.;Medium;Applications Security
A web app starts serving malicious content after an update. What could be the attack vector?;Cross-Site Scripting (XSS);Cross-Site Request Forgery (CSRF);SQL Injection;Denial of Service (DoS);A;Cross-Site Scripting (XSS) allows an attacker to inject malicious scripts into content which can then be served to users.;Medium;Applications Security
A mobile app is leaking data due to weak API server-side checks. What should be strengthened?;Network firewall rules;API rate limiting;Input validation and access controls;Logging mechanisms;C;Strengthening input validation and access controls ensures that API endpoints correctly enforce security rules and prevent unauthorized data access.;Medium;Applications Security
Upon monitoring a high-traffic web application, frequent login failures are noted. What could this indicate?;Potential Distributed Denial of Service (DDoS);Credential stuffing attack;Network latency issues;Improper session management;B;Frequent login failures might indicate a credential stuffing attack where attackers use lists of stolen credentials attempting to gain unauthorized access.;Hard;Applications Security
Your mobile app uses third-party SDKs. How do you ensure they don't introduce vulnerabilities?;Rely on app store screening;Conduct static and dynamic analysis;Limit the number of SDKs used;Disable SDK features;B;Conducting static and dynamic analysis ensures that the SDKs donâ€™t contain unintentional vulnerabilities or malicious code.;Hard;Applications Security
A company experiences data tampering issues in an application secured with HTTPS. What additional measure should you consider?;Public-key pinning;Perfect Forward Secrecy;Content Security Policy (CSP);Digital signatures and checksums;D;Digital signatures and checksums can help verify the integrity and authenticity of the data to prevent tampering.;Hard;Applications Security
You are a mobile app developer working on a banking application. Which is the most secure method to ensure sensitive information like user credentials is safely stored on the device?;Store in plaintext within app storage;Use a secure server and fetch only when needed;Encrypt and store in Shared Preferences;Store in SQLite database without encryption;B;Using a secure server ensures sensitive data is not stored on the device, thus preventing local exploitation risks.; Easy; Applications Security
You're tasked with securing a web application against Cross-Site Scripting (XSS) attacks. What is the best method to neutralize XSS vulnerabilities?;Sanitize user input before submitting to the server;Use properly configured Content Security Policy (CSP);Encrypt all data transmitted over HTTPS;Obfuscate JavaScript code;B;CSPs are a strong measure in preventing XSS attacks by restricting sources for content.; Easy; Applications Security
During a code review of a web application, you notice the absence of input validation. Which vulnerability does this make the application most susceptible to?;SQL Injection;Cross-Site Request Forgery (CSRF);Directory Traversal;Cross-Site Scripting (XSS);A;Without input validation, attackers can inject malicious SQL statements, leading to SQL Injection.; Easy; Applications Security
A retail company's mobile app is experiencing a sudden increase in data usage, and users report slow performance. What is the first step to investigate a potential cause?;Monitor network traffic for anomalies;Review third-party SDK usage;Analyze recent code changes;Request device logs from users;A;Monitoring network traffic can immediately reveal unusual data consumption, indicating possible underlying issues.; Medium; Applications Security
While testing a web application's security, you need to verify how it handles session management. Which technique should you employ first to assess this aspect?;Try session hijacking;Perform a penetration test on authentication mechanism;Review session timeout settings;Attempt to inject cookies with arbitrary values;C;Proper session timeout settings are crucial for secure session management, aiding in preventing unauthorized access.; Medium; Applications Security
A mobile banking app requires improved security features. Which is the best practice to protect data at rest?;Implement SSL/TLS encryption for data in transit;Encrypt sensitive data using AES-256 before storage;Enable biometrics as a second factor;Use basic string obfuscation for data;B;AES-256 encryption is a strong algorithm for encrypting data at rest, ensuring its confidentiality.; Medium; Applications Security
The web application you're auditing is vulnerable to CSRF attacks. Which mitigation strategy should you suggest to decrease this risk?;Use POST instead of GET requests;Implement CSRF tokens and validate them with each state-modifying request;Require users to change passwords regularly;Encrypt all cookies;B;CSRF tokens prevent attackers from executing state-changing actions on behalf of authenticated users.; Hard; Applications Security
A web developer needs to secure API endpoints to prevent unauthorized access. Which strategy provides the most robust security?;Use API keys in client-side code;Permit access based on IP;Implement OAuth 2.0 authentication;Use HTTP basic authentication;C;OAuth 2.0 is a secure and widely adopted framework for API authentication, providing strong access control.;Hard;Applications Security
A new vulnerability is discovered affecting popular encryption libraries used in your web application. How should you respond to ensure continued application security?;Continue monitoring and hope for the best;Review and update dependencies to their latest versions;Disable encryption temporarily;Alert users to change their passwords frequently;B;Updating dependencies ensures your application benefits from security patches released to mitigate the vulnerability.; Hard; Applications Security
Your development team is building a web application that requires the storage of sensitive user passwords. What is the best practice for storing these passwords securely?;Store passwords as plain text;Use a symmetric encryption algorithm;Hash passwords using a strong hashing algorithm with a salt;Store passwords with base64 encoding;C;Passwords should be hashed with a strong hashing algorithm, such as bcrypt, which incorporates a salt to defend against rainbow table attacks.;Easy;Applications Security
You notice that users' sessions on your mobile app are timing out too quickly. To balance security with a good user experience, you decide to increase the session timeout duration. Which of the following settings is the most secure yet user-friendly solution?;Set session timeout to 30 minutes of inactivity;Make sessions last indefinitely;Set timeout to match user's login duration;Set session timeout to 8 hours;A;A 30-minute session timeout balances security requirements against user convenience by minimizing the risk of session hijacking.;Easy;Applications Security
A web application you maintain is susceptible to SQL injection. What is the most effective general measure to protect against SQL injection attacks?;Use client-side input validation;Implement parameterized queries;Hide SQL error messages from users;Regular updates of database software;B;Parameterized queries ensure that user inputs are treated as data rather than executable code, thus preventing SQL Injection.;Easy;Applications Security
Your company runs a popular mobile app that processes payment information. The compliance team requires you to strengthen the app's data transmission security. Which of the following measures should you implement?;Store the payment data locally on the device;Use HTTPS for all data transmission;Encrypt data using a simple cipher like Caesar cipher;Disable SSL certificate verification;B;Using HTTPS ensures that data transmitted between the app and the server is encrypted and secure from man-in-the-middle attacks.;Medium;Applications Security
An online banking web application is being built and needs to properly manage user sessions to prevent session fixation attacks. Which practice best protects against session fixation?;Use client-side cookies to manage sessions;Allow multiple sessions for a single user;Regenerate session ID after login;Set persistent session cookies;C;Regenerating the session ID after login helps prevent attackers from setting an initial session ID that could be used maliciously.;Medium;Applications Security
You're leading a security assessment on a mobile application and suspect that insecure data storage might be a concern. Which would be the best approach to verify this vulnerability?;Check if the app uses any form of encryption;Review server-side configuration settings;Utilize a tool to analyze app behavior and storage access;Inspect network traffic for sensitive information;C;Using a tool to analyze app behavior and storage access helps identify whether sensitive data is stored securely on the device.;Medium;Applications Security
A networking monitoring system shows unusual traffic patterns to your web server, indicating a potential Distributed Denial of Service (DDoS) attack is underway. What is the most effective first step to mitigate this attack?;Disable network interfaces temporarily;Add more server resources;Implement web application firewalls;Block all incoming traffic;C;A web application firewall can help detect and filter out malicious traffic, slowing or stopping the impact of a DDoS attack.;Hard;Applications Security
During a security review of your mobile app, you need to ensure no sensitive data is inadvertently exposed through logs. What is the best approach to verify and solve this issue?;Review only error logs;Sanitize log entries by removing sensitive data;Disable all logging functionalities;Log sensitive data for debugging;B;Sanitizing logs involves ensuring no sensitive data like passwords or private user information is recorded, safeguarding against unintended exposure.;Hard;Applications Security
Your team is performing a code review on a web application to identify potential security flaws. While focusing on the authentication mechanism, what should you prioritize to address potential vulnerabilities?;Implement CAPTCHA for all login attempts;Avoid storing audit logs for privacy;Ensure secure password reset mechanisms;Allow password sharing for trusted users;C;A secure password reset mechanism is crucial to prevent unauthorized access by ensuring only authenticated users can reset their credentials.;Hard;Applications Security
